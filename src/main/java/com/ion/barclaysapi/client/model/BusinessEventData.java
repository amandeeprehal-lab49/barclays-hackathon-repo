/*
 * Barclays RepoHack 2023 API
 * APIs for the dealers’ and clients’ interactions with financial market infrastructure services (Trade matching middleware, CCPs, CSDs) for the Barclays 2023 Repo Hackathon.<br>Please ensure you include your API key in the `x-api-key` header of your requests.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ion.barclaysapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ion.barclaysapi.client.model.BusinessEventDto;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BusinessEventData
 */
@JsonPropertyOrder({
  BusinessEventData.JSON_PROPERTY_TRADE_ID,
  BusinessEventData.JSON_PROPERTY_BUSINESS_EVENTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-09-25T22:42:46.793138+05:30[Asia/Kolkata]")
public class BusinessEventData {
  public static final String JSON_PROPERTY_TRADE_ID = "tradeId";
  private String tradeId;

  public static final String JSON_PROPERTY_BUSINESS_EVENTS = "businessEvents";
  private List<BusinessEventDto> businessEvents;

  public BusinessEventData() {
  }

  public BusinessEventData tradeId(String tradeId) {
    
    this.tradeId = tradeId;
    return this;
  }

   /**
   * Get tradeId
   * @return tradeId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRADE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTradeId() {
    return tradeId;
  }


  @JsonProperty(JSON_PROPERTY_TRADE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTradeId(String tradeId) {
    this.tradeId = tradeId;
  }


  public BusinessEventData businessEvents(List<BusinessEventDto> businessEvents) {
    
    this.businessEvents = businessEvents;
    return this;
  }

  public BusinessEventData addBusinessEventsItem(BusinessEventDto businessEventsItem) {
    if (this.businessEvents == null) {
      this.businessEvents = new ArrayList<>();
    }
    this.businessEvents.add(businessEventsItem);
    return this;
  }

   /**
   * Get businessEvents
   * @return businessEvents
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUSINESS_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BusinessEventDto> getBusinessEvents() {
    return businessEvents;
  }


  @JsonProperty(JSON_PROPERTY_BUSINESS_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBusinessEvents(List<BusinessEventDto> businessEvents) {
    this.businessEvents = businessEvents;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BusinessEventData businessEventData = (BusinessEventData) o;
    return Objects.equals(this.tradeId, businessEventData.tradeId) &&
        Objects.equals(this.businessEvents, businessEventData.businessEvents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tradeId, businessEvents);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BusinessEventData {\n");
    sb.append("    tradeId: ").append(toIndentedString(tradeId)).append("\n");
    sb.append("    businessEvents: ").append(toIndentedString(businessEvents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * Barclays RepoHack 2023 API
 * APIs for the dealers’ and clients’ interactions with financial market infrastructure services (Trade matching middleware, CCPs, CSDs) for the Barclays 2023 Repo Hackathon.<br>Please ensure you include your API key in the `x-api-key` header of your requests.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ion.barclaysapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RepoSeller
 */
@JsonPropertyOrder({
  RepoSeller.JSON_PROPERTY_SELLER_NAME,
  RepoSeller.JSON_PROPERTY_SELLER_LEI,
  RepoSeller.JSON_PROPERTY_SELLER_ACCOUNT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-09-25T22:42:46.793138+05:30[Asia/Kolkata]")
public class RepoSeller {
  public static final String JSON_PROPERTY_SELLER_NAME = "seller_name";
  private String sellerName;

  public static final String JSON_PROPERTY_SELLER_LEI = "seller_lei";
  private String sellerLei;

  public static final String JSON_PROPERTY_SELLER_ACCOUNT = "seller_account";
  private String sellerAccount;

  public RepoSeller() {
  }

  public RepoSeller sellerName(String sellerName) {
    
    this.sellerName = sellerName;
    return this;
  }

   /**
   * Get sellerName
   * @return sellerName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SELLER_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSellerName() {
    return sellerName;
  }


  @JsonProperty(JSON_PROPERTY_SELLER_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSellerName(String sellerName) {
    this.sellerName = sellerName;
  }


  public RepoSeller sellerLei(String sellerLei) {
    
    this.sellerLei = sellerLei;
    return this;
  }

   /**
   * Get sellerLei
   * @return sellerLei
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SELLER_LEI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSellerLei() {
    return sellerLei;
  }


  @JsonProperty(JSON_PROPERTY_SELLER_LEI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSellerLei(String sellerLei) {
    this.sellerLei = sellerLei;
  }


  public RepoSeller sellerAccount(String sellerAccount) {
    
    this.sellerAccount = sellerAccount;
    return this;
  }

   /**
   * Get sellerAccount
   * @return sellerAccount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SELLER_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSellerAccount() {
    return sellerAccount;
  }


  @JsonProperty(JSON_PROPERTY_SELLER_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSellerAccount(String sellerAccount) {
    this.sellerAccount = sellerAccount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RepoSeller repoSeller = (RepoSeller) o;
    return Objects.equals(this.sellerName, repoSeller.sellerName) &&
        Objects.equals(this.sellerLei, repoSeller.sellerLei) &&
        Objects.equals(this.sellerAccount, repoSeller.sellerAccount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sellerName, sellerLei, sellerAccount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RepoSeller {\n");
    sb.append("    sellerName: ").append(toIndentedString(sellerName)).append("\n");
    sb.append("    sellerLei: ").append(toIndentedString(sellerLei)).append("\n");
    sb.append("    sellerAccount: ").append(toIndentedString(sellerAccount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


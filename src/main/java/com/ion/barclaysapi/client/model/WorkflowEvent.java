/*
 * Barclays RepoHack 2023 API
 * APIs for the dealers’ and clients’ interactions with financial market infrastructure services (Trade matching middleware, CCPs, CSDs) for the Barclays 2023 Repo Hackathon.<br>Please ensure you include your API key in the `x-api-key` header of your requests.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ion.barclaysapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * WorkflowEvent
 */
@JsonPropertyOrder({
  WorkflowEvent.JSON_PROPERTY_EVENT_SEQUENCE,
  WorkflowEvent.JSON_PROPERTY_REQUEST_ID,
  WorkflowEvent.JSON_PROPERTY_TRADE_STATUS,
  WorkflowEvent.JSON_PROPERTY_TRADE_MATCHING_STATUS,
  WorkflowEvent.JSON_PROPERTY_EVENT_TIME_STAMP
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-09-25T22:42:46.793138+05:30[Asia/Kolkata]")
public class WorkflowEvent {
  public static final String JSON_PROPERTY_EVENT_SEQUENCE = "eventSequence";
  private Integer eventSequence;

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private UUID requestId;

  public static final String JSON_PROPERTY_TRADE_STATUS = "tradeStatus";
  private String tradeStatus;

  public static final String JSON_PROPERTY_TRADE_MATCHING_STATUS = "tradeMatchingStatus";
  private String tradeMatchingStatus;

  public static final String JSON_PROPERTY_EVENT_TIME_STAMP = "eventTimeStamp";
  private OffsetDateTime eventTimeStamp;

  public WorkflowEvent() {
  }

  public WorkflowEvent eventSequence(Integer eventSequence) {
    
    this.eventSequence = eventSequence;
    return this;
  }

   /**
   * Get eventSequence
   * @return eventSequence
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EVENT_SEQUENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getEventSequence() {
    return eventSequence;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_SEQUENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventSequence(Integer eventSequence) {
    this.eventSequence = eventSequence;
  }


  public WorkflowEvent requestId(UUID requestId) {
    
    this.requestId = requestId;
    return this;
  }

   /**
   * Get requestId
   * @return requestId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(UUID requestId) {
    this.requestId = requestId;
  }


  public WorkflowEvent tradeStatus(String tradeStatus) {
    
    this.tradeStatus = tradeStatus;
    return this;
  }

   /**
   * Get tradeStatus
   * @return tradeStatus
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRADE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTradeStatus() {
    return tradeStatus;
  }


  @JsonProperty(JSON_PROPERTY_TRADE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTradeStatus(String tradeStatus) {
    this.tradeStatus = tradeStatus;
  }


  public WorkflowEvent tradeMatchingStatus(String tradeMatchingStatus) {
    
    this.tradeMatchingStatus = tradeMatchingStatus;
    return this;
  }

   /**
   * Get tradeMatchingStatus
   * @return tradeMatchingStatus
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRADE_MATCHING_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTradeMatchingStatus() {
    return tradeMatchingStatus;
  }


  @JsonProperty(JSON_PROPERTY_TRADE_MATCHING_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTradeMatchingStatus(String tradeMatchingStatus) {
    this.tradeMatchingStatus = tradeMatchingStatus;
  }


  public WorkflowEvent eventTimeStamp(OffsetDateTime eventTimeStamp) {
    
    this.eventTimeStamp = eventTimeStamp;
    return this;
  }

   /**
   * Get eventTimeStamp
   * @return eventTimeStamp
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EVENT_TIME_STAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getEventTimeStamp() {
    return eventTimeStamp;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_TIME_STAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventTimeStamp(OffsetDateTime eventTimeStamp) {
    this.eventTimeStamp = eventTimeStamp;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkflowEvent workflowEvent = (WorkflowEvent) o;
    return Objects.equals(this.eventSequence, workflowEvent.eventSequence) &&
        Objects.equals(this.requestId, workflowEvent.requestId) &&
        Objects.equals(this.tradeStatus, workflowEvent.tradeStatus) &&
        Objects.equals(this.tradeMatchingStatus, workflowEvent.tradeMatchingStatus) &&
        Objects.equals(this.eventTimeStamp, workflowEvent.eventTimeStamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventSequence, requestId, tradeStatus, tradeMatchingStatus, eventTimeStamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkflowEvent {\n");
    sb.append("    eventSequence: ").append(toIndentedString(eventSequence)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    tradeStatus: ").append(toIndentedString(tradeStatus)).append("\n");
    sb.append("    tradeMatchingStatus: ").append(toIndentedString(tradeMatchingStatus)).append("\n");
    sb.append("    eventTimeStamp: ").append(toIndentedString(eventTimeStamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


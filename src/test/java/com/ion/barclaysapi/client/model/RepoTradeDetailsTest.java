/*
 * Barclays RepoHack 2023 API
 * APIs for the dealers’ and clients’ interactions with financial market infrastructure services (Trade matching middleware, CCPs, CSDs) for the Barclays 2023 Repo Hackathon.<br>Please ensure you include your API key in the `x-api-key` header of your requests.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ion.barclaysapi.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

/**
 * Model tests for RepoTradeDetails
 */
public class RepoTradeDetailsTest {
    private final RepoTradeDetails model = new RepoTradeDetails();

    /**
     * Model tests for RepoTradeDetails
     */
    @Test
    public void testRepoTradeDetails() {
        // TODO: test RepoTradeDetails
    }

    /**
     * Test the property 'tradeDate'
     */
    @Test
    public void tradeDateTest() {
        // TODO: test tradeDate
    }

    /**
     * Test the property 'effectiveDate'
     */
    @Test
    public void effectiveDateTest() {
        // TODO: test effectiveDate
    }

    /**
     * Test the property 'maturityDate'
     */
    @Test
    public void maturityDateTest() {
        // TODO: test maturityDate
    }

    /**
     * Test the property 'repoRate'
     */
    @Test
    public void repoRateTest() {
        // TODO: test repoRate
    }

    /**
     * Test the property 'rateDaycountConvention'
     */
    @Test
    public void rateDaycountConventionTest() {
        // TODO: test rateDaycountConvention
    }

    /**
     * Test the property 'collateralId'
     */
    @Test
    public void collateralIdTest() {
        // TODO: test collateralId
    }

    /**
     * Test the property 'collateralNotional'
     */
    @Test
    public void collateralNotionalTest() {
        // TODO: test collateralNotional
    }

    /**
     * Test the property 'collateralDirtyPrice'
     */
    @Test
    public void collateralDirtyPriceTest() {
        // TODO: test collateralDirtyPrice
    }

    /**
     * Test the property 'collateralHaircut'
     */
    @Test
    public void collateralHaircutTest() {
        // TODO: test collateralHaircut
    }

    /**
     * Test the property 'tradeCcy'
     */
    @Test
    public void tradeCcyTest() {
        // TODO: test tradeCcy
    }

    /**
     * Test the property 'cashAmount'
     */
    @Test
    public void cashAmountTest() {
        // TODO: test cashAmount
    }

    /**
     * Test the property 'terminationCashAmount'
     */
    @Test
    public void terminationCashAmountTest() {
        // TODO: test terminationCashAmount
    }

}
